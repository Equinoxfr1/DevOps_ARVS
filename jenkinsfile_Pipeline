    pipeline {
        agent any

        parameters {
            string(name: 'Nom', defaultValue: '', description: 'Entrez votre nom')
            string(name: 'PrÃ©nom', defaultValue: '', description: 'Entrez votre prÃ©nom')

            // Liste dÃ©roulante pour le mois
            choice(name: 'Mois de naissance', choices: ['JANVIER', 'FEVRIER', 'MARS', 'AVRIL', 'MAI', 'JUIN', 'JUILLET', 'AOUT', 'SEPTEMBRE', 'OCTOBRE', 'NOVEMBRE', 'DECEMBRE'], description: 'Selectionnez votre mois de naissance')

            // Liste dÃ©roulante pour le jour, qui dÃ©pend du mois sÃ©lectionnÃ©
            // Par dÃ©faut, on prend un maximum de 31 jours, mais il sera ajustÃ© dans le pipeline
            choice(name: 'Jour de naissance', choices: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'], description: 'Selectionnez votre jour de naissance')

            // Liste dÃ©roulante pour l'annÃ©e de 1900 Ã  2025
choice(name: 'AnnÃ©e de naissance', choices: [
    '2025', '2024', '2023', '2022', '2021', '2020', 
    '2019', '2018', '2017', '2016', '2015', '2014', 
    '2013', '2012', '2011', '2010', '2009', '2008', 
    '2007', '2006', '2005', '2004', '2003', '2002', 
    '2001', '2000', '1999', '1998', '1997', '1996', 
    '1995', '1994', '1993', '1992', '1991', '1990', 
    '1989', '1988', '1987', '1986', '1985', '1984', 
    '1983', '1982', '1981', '1980', '1979', '1978', 
    '1977', '1976', '1975', '1974', '1973', '1972', 
    '1971', '1970', '1969', '1968', '1967', '1966', 
    '1965', '1964', '1963', '1962', '1961', '1960', 
    '1959', '1958', '1957', '1956', '1955', '1954', 
    '1953', '1952', '1951', '1950', '1949', '1948', 
    '1947', '1946', '1945', '1944', '1943', '1942', 
    '1941', '1940', '1939', '1938', '1937', '1936', 
    '1935', '1934', '1933', '1932', '1931', '1930', 
    '1929', '1928', '1927', '1926', '1925', '1924', 
    '1923', '1922', '1921', '1920', '1919', '1918', 
    '1917', '1916', '1915', '1914', '1913', '1912', 
    '1911', '1910', '1909', '1908', '1907', '1906', 
    '1905', '1904', '1903', '1902', '1901', '1900'
], description: 'Selectionnez votre annÃ©e de naissance')

            // Pour la date actuelle
            choice(name: 'Mois Actuel', choices: ['JANVIER', 'FEVRIER', 'MARS', 'AVRIL', 'MAI', 'JUIN', 'JUILLET', 'AOUT', 'SEPTEMBRE', 'OCTOBRE', 'NOVEMBRE', 'DECEMBRE'], description: 'Selectionnez le mois actuel')

            // Liste dÃ©roulante pour le jour, qui dÃ©pend du mois sÃ©lectionnÃ©
            // Par dÃ©faut, on prend un maximum de 31 jours, mais il sera ajustÃ© dans le pipeline
            choice(name: 'Jour Actuel', choices: ['01', '02', '03', '04', '05', '06', '07', '08', '09', '10', '11', '12', '13', '14', '15', '16', '17', '18', '19', '20', '21', '22', '23', '24', '25', '26', '27', '28', '29', '30', '31'], description: 'Selectionnez le jour actuel')

        }

        stages { 
            stage('VÃ©rification Anniversaire') {
                steps {
                    script {
                        def today = "${params.'Jour Actuel'}"
                        def Month = "${'Mois Actuel'}"
                        def birthDay = "${params.'Jour de naissance'}"  // Jour de naissance
                        def birthMonth = "${params.'Mois de naissance'}"  // Mois de naissance
                        def birthYear = "${params.'AnnÃ©e de naissance'}"  // AnnÃ©e de naissance

                        def currentDate = new Date()
                        def currentYear = currentDate.format('yyyy')  // Obtient l'annÃ©e actuelle
                    
                        // VÃ©rifier si c'est l'anniversaire
                        if ((today == birthDay) && (Month == birthMonth)) {
                            echo "ðŸŽ‰ Joyeux Anniversaire ${params.PrÃ©nom} ${params.Nom} ! Tu as maintenant ${currentYear.toInteger() - birthYear.toInteger()} ans ! ðŸŽ‚"
                        }
                    }
                }
            }

            stage("Objectifs du Mois de Janvier - Reconstruire l'arrÃªt de bus dans ma maison") {
                parallel {
                    stage("Choisir une piÃ¨ce de la maison Ã  dÃ©molir") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"
                                echo "${params.Mois}"
                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "JANVIER"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                    }
                    stage("Identifier les lignes de bus Ã  proximitÃ©") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "JANVIER"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                    }
                    stage("Promouvoir la construction auprÃ¨s de ses camarades de classe") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "JANVIER"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                         }
                     }
                     stage("ArrÃªter de faire du covoiturage") {
                         steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "JANVIER"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                         }
                     }
                }
            }

            stage("Objectifs du Mois de FÃ©vrier - Obtenir le CCNA Ã  97%") {
                parallel {
                    stage("Ajouter une adresse IP sur le switch") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "FEVRIER"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                    }
                    stage("Oublier sa clÃ© USB") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "FEVRIER"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Changer l'adresse MAC du routeur") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "FEVRIER"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Se garer sur le terre-plein") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "MARS"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Aller chercher sa sÅ“ur Ã  la maternelle tous les lundis") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "MARS"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                }
            }

            stage("Objectifs du Mois de Mars - Reconstruire le lit de Martin") {
                parallel {
                    stage("VÃ©rifier l'Ã©tat du lit") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "MARS"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                    }
                    stage("Remplacer les lattes du lit") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "MARS"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Consolider les embouts de lattes") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "MARS"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Mettre un matelas plus lÃ©ger sur le lit") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "MARS"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                }
            }

            stage("Objectifs du Mois d'Avril - Rendre le compte-rendu du TP CCourbe") {
                parallel {
                    stage("Installer le framework Qt sur son poste") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "AVRIL"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                    }
                    stage("Suivre les Ã©tapes du TP CCourbes") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "AVRIL"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("RÃ©diger le compte-rendu sur un document Libre Office Writer") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "AVRIL"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Corriger les fautes d'orthographe avec Antidote") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "AVRIL"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Utiliser ChatGPT 2.0 pour s'aider dans la rÃ©daction") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "AVRIL"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Travailler en groupe de 3 personnes") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "AVRIL"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Respecter la deadline de une semaine aprÃ¨s la fin du module") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "AVRIL"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                }
            }

            stage("Objectifs du Mois de Mai - PrÃ©parer sa rentrÃ©e en ATS") {
                parallel {
                    stage("Assister Ã  la prÃ©sentation de l'ATS") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "MAI"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                    }
                    stage("Obtenir son BTS avec 16+ de moyenne") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "MAI"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("RÃ©unir et envoyer les documents au centre de formation") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "MAI"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                }
            }


            stage("Objectifs du Mois de Juin - Installer un serveur de supervision Centreon") {
                parallel {
                    stage("Installer ESXi VMWare sur un disque virtuel RAID 5") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "JUIN"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                    }
                    stage("Installer l'iso prÃ©configurÃ© de CentOS 7") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "JUIN"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Configurer CentOS 7 pour les switchs HP") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "JUIN"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Faire du carte du rÃ©seau informatique") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "JUIN"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                }
            }

            stage("Objectifs du Mois de Juillet - Se reconvertir dans les mÃ©tiers du livre") {
                parallel {
                    stage("Rechercher une Ã©cole pour un but MMI") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "JUILLET"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                    }
                    stage("ArrÃªter sa formation actuelle avant les Ã©preuves finales") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "JUILLET"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Rechercher une entreprise pour son alternance") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "JUILLET"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                }
            }


            stage("Objectifs du Mois de AoÃ»t - PrÃ©parer ses vacances Ã  Gnigny") {
                parallel {
                    stage("PrÃ©parer sa valise") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "AOUT"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                    }
                    stage("RÃ©server le lieu d'hÃ©bergement Ã  Grigny") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "AOUT"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("S'assurer d'avoir un portable et des chaussures de rechanges") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "AOUT"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Planifier son trajet pour Ã©viter les coins dit 'chaud'") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "AOUT"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                }
            }

            stage("Objectifs du Mois de Septembre - Planifier la construction d'une salle d'Ã©tude climatisÃ©e") {
                parallel {
                    stage("DÃ©finir les besoins et contraintes du projet") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "SEPTEMBRE"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                    }
                    stage("Ã‰tablir un budget et un plan de conception") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "SEPTEMBRE"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Planifier les travaux et la mise en service") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "SEPTEMBRE"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                     stage("Mettre 0000 en code de l'Ã©cran") {
                        steps {
                            script {
                                def today = "${params.Jour}"  // RÃ©cupÃ¨re le jour du paramÃ¨tre
                                def Month = "${params.Mois}"

                                // Appeler la fonction de vÃ©rification du jour
                                if(Month == "SEPTEMBRE"){
                                    def checkDayPeriod = { dayToCheck, month ->
                                        def dayInt = dayToCheck.toInteger()  // Convertir en entier
                                        def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

                                        if (dayInt >= 1 && dayInt <= 15) {
                                            echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
                                        } 
                                        else if (dayInt >= 16 && dayInt <= 31) {
                                            def remainingDays = daysInMonth[month.toUpperCase()] - dayInt  // Calculer les jours restants
                                            echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
                                        }
                                    }
                                    // Appel de la fonction ici aussi
                                    checkDayPeriod(today, Month)
                                }
                            }
                        }
                     }
                }
            }


            stage("Objectifs du Mois d'Octobre - Gagner la course Virtual Regetta") {
                parallel {
                    stage("Analyser les conditions mÃ©tÃ©orologiques et la route optimale") {
                        steps {
                            checkMonthlyObjectives('OCTOBRE', "${params.Jour}")
                        }
                    }
                    stage("Optimiser les rÃ©glages du bateau et la gestion du temps") {
                        steps {
                            checkMonthlyObjectives('OCTOBRE', "${params.Jour}")
                            }
                        }
                     }
                     stage("Surveiller et ajuster la stratÃ©gie en temps rÃ©el") {
                        steps {
                            checkMonthlyObjectives('OCTOBRE', "${params.Jour}")
                            }
                        }
                     }
                }
            }

            stage("Objectifs du Mois Novembre - Organiser la remise des diplÃ´mes du CNAM") {
                parallel {
                    stage("Demander aux Ã©tudiants de venir") {
                        steps {
                            script {
                                checkMonthlyObjectives('NOVEMBRE', "${params.Jour}")
                            }
                        }
                    }
                    stage("PrÃ©parer amphithÃ©Ã¢tre pour la remise des diplÃ´mes") {
                        steps {
                            script {
                                checkMonthlyObjectives('NOVEMBRE', "${params.Jour}")
                            }
                        }
                     }
                     stage("Oublier les diplÃ´mes en format papier") {
                        steps {
                            script {
                                checkMonthlyObjectives('NOVEMBRE', "${params.Jour}")
                            }
                        }
                     }
                }
            }

            stage("Objectifs du Mois DÃ©cembre - Passer le TOEIC") {
                parallel {
                    stage("Planifier des rÃ©vision") {
                        steps {
                            checkMonthlyObjectives('DECEMBRE', "${params.Jour}")
                        }
                    }
                    stage("S'inscrire Ã  une session de TOEIC") {
                        steps {
                            checkMonthlyObjectives('DECEMBRE', "${params.Jour}")
                        }
                     }
                     stage("Faire des tests blanc") {
                        steps {
                            script {
                                    checkMonthlyObjectives('DECEMBRE', "${params.Jour}")
                                }
                            }
                        }
                     }
                }
    }
}

def checkMonthlyObjectives(String month, String day) {
    def dayInt = day.toInteger()
    def daysInMonth = [JANVIER: 31, FEVRIER: 28, MARS: 31, AVRIL: 30, MAI: 31, JUIN: 30, JUILLET: 31, AOUT: 31, SEPTEMBRE: 30, OCTOBRE: 31, NOVEMBRE: 30, DECEMBRE: 31]

    if (dayInt >= 1 && dayInt <= 15) {
        echo "Vous avez des nouveaux objectifs pour ce mois-ci ! Voici la liste : "
    } else if (dayInt >= 16 && dayInt <= 31) {
        def remainingDays = daysInMonth[month.toUpperCase()] - dayInt
        echo "Il ne vous reste que ${remainingDays} jours pour accomplir vos objectifs. Courage ðŸ’ª!"
    }
}
