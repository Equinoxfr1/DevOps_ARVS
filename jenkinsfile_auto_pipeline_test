pipeline {
    agent any
    
    stages {
        stage('Get Issues') {
            steps {
                script {
                    // Définir les variables pour le propriétaire et le nom du projet
                    def owner = "Equinoxfr1" // Remplace par le nom du propriétaire du repo GitHub
                    def repo = "DevOps_ARVS" // Remplace par le nom du projet GitHub
                    
                    // Construire l'URL complète
                    def url = "https://api.github.com/repos/${owner}/${repo}/issues"
                    
                    // Utiliser Invoke-WebRequest pour récupérer les issues en PowerShell
                    def response = powershell(script: """
                        \$response = Invoke-WebRequest -Uri '${url}'
                        \$responseContent = \$response.Content
                        \$json = \$responseContent | ConvertFrom-Json
                        \$json | ForEach-Object { \$_ .title }
                    """, returnStdout: true).trim()

                    // Si tu veux ajouter un traitement plus détaillé ici (par exemple, une liste des titres d'issues)
                    def issueTitles = response.split("\n")

                    // Créer un stage pour chaque issue
                    issueTitles.each { issue ->
                        stage("Issue: ${issue}") {
                            steps {
                                echo "Handling issue: ${issue}"
                                // Ajouter ici les actions pour chaque issue
                            }
                        }
                    }
                }
            }
        }
    }
}
